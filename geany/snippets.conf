
[Python]
# python3 and pep8 compliant
# by Devyn Collier Johnson <DevynCJohnson@Gmail.com>,
#    Tomasz Karbownicki <tomasz@karbownicki.com> (Django models)
#    and Mark Doerr <mark.doerr@uni-greifswald.de>

py=#!/usr/bin/env python3\n# vim:fileencoding=utf-8\n
py2=#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n# vim:fileencoding=utf-8\n
utf8=#-*- coding: utf-8 -*-\n# vim:fileencoding=utf-8\n
head_old="""\n\t%cursor%PROJECT - MODULE\n\n\tDESCRIPTION\n\n\t@copyright: {year} by {developer} <{mail}>\n\t@license: GNU GPL, see COPYING for details.\n"""\n
head="""\n________________________________________________________________________\n\n:PROJECT: %cursor%\n\n*brief summary*\n\n:details: :\n\n          - bullet points\n\n:file:    .py\n\n:author:  {developer} <{mail}> : contrib.\n\n:version: 0.0.1\n\n:date: (creation)          {year}{month}{day}\n:date: (last modification) {year}{month}{day}\n.. note:: some remarks\n.. todo:: -\n\n________________________________________________________________________\n\n**Copyright**:\n  This program is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 2 of the License, or\n  (at your option) any later version.\n  This file is provided "AS IS" with NO WARRANTY OF ANY KIND,\n  INCLUDING THE WARRANTIES OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n  For further Information see COPYING file that comes with this distribution.\n________________________________________________________________________\n\n"""
license=__license__ = """LGPLv3\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n"""
date={date}

ver=__version__ = "%cursor%"\n
doc=""" %cursor% """\n

main=if __name__ == '__main__':\n\t"""Main: """\n\t%cursor%
mainap=if __name__ == '__main__':\n\t"""Main: """\n\t%cursor% # argparse

def=def %cursor%():\n\t""" :param : """\n\t
class=class %cursor%():\n\t""" Class doc """\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
super=super().__init__(%cursor%)\t\n
cdef=def %cursor%(self):\n\t""" \param """\n\tpass\n\t
get=def get%cursor%(self): return self._var\n
set=def set%cursor%(self): self._var = var\n
try=try:\n\t%cursor%\nexcept Exception, e:\n\t
while=while %cursor%:\n\t
with=with %cursor%:\n\t
for=for i in xrange(%cursor%):\n\t
elif=elif %cursor%:\n\t
else=else:\n\t%cursor%
if=if %cursor%:\n\t
from=from %cursor% import \n
# django models
mclass=class %cursor%(models.Model):\n\t'''%cursor%'''\n\n\tdef __unicode__(self):\n\t\treturn self.XXXXX\n\n\tdef get_absolute_url(self):\n\t\treturn "/XXXXX/%s/" % self.slug\n\n\tclass Meta:\n\t\tverbose_name = "%cursor%"\n\t\tverbose_name_plural = "%cursor%"
mchar=%cursor% = models.CharField(max_length=50, verbose_name=u'%cursor%')
mint=%cursor% = models.IntegerField(verbose_name=u'%cursor%')
mtext=%cursor% = models.TextField(verbose_name=u'%cursor%')
mkey=%cursor% = models.ForeignKey(%cursor%, verbose_name=u'%cursor%')
mimage=%cursor% = models.ImageField(upload_to='', verbose_name=u'%cursor%')
mbool=%cursor% = models.BooleanField(verbose_name=u'%cursor%')
mdate=%cursor% = models.DateField(verbose_name=u'%cursor%', help_text='Format daty: 2009-04-28')
memail=%cursor% = models.EmailField(verbose_name=u'%cursor%')
murl=%cursor% = models.URLField(verbose_name=u'%cursor%')
mslug=%cursor% = models.SlugField(verbose_name=u'%cursor%', unique=True)

all=__all__ = [\n\t'FUNC',\n]
#debug=print('HERE')  # DEBUG: Print
logging=import logging\n\nlogging.basicConfig(format='%(levelname)s| %(module)s.%(funcName)s:%(message)s', level=logging.DEBUG)\n#~ logging.basicConfig(format='%(levelname)s|%(module)s.%(funcName)s:%(message)s', level=logging.ERROR)\n
debug=logging.debug("%cursor%")

[Sh]
head=#!/bin/sh\n# -*- coding: utf-8 -*-\n# vim:fileencoding=utf-8\n# Created by {developer}\n# <{mail}>\n# DESCRIPTION\n# Version {date}
hashpling=#!/bin/sh\n
bashhashpling=#!/bin/bash\n
cshhashpling=#!/bin/csh\n
envhashpling=#!/usr/bin/env INTERPRETER\n
utf8=# -*- coding: utf-8 -*-\n# vim:fileencoding=utf-8\n
bash=#!/bin/bash
rmdir=rm -vrd --one-file-system /PATH/*
softlink=ln -vs -t /DESTINATION/PATH /LINK/FILE
if=if [ %cursor% ]; then\n\t%cursor%\nfi
for=for i in `%cursor%`;\ndo\n\t%cursor%\ndone
else=else\n\t%cursor%
case=case %cursor% in \n\t%cursor%)\n\t\t%cursor%\n\t\t;;\n\t%cursor%)\n\t\t%cursor%\n\t\t;;\n\t*)\n\t\t%cursor%\n\t\t;;\nesac\n%cursor%
